---
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/os/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "os/{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "{{ role_name }} | Detect oh-my-zsh"
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.oh-my-zsh"
  register: ohmyzsh

- name: "{{ role_name }} | Register oh-my-zsh state"
  ansible.builtin.set_fact:
    ohmyzsh_is_installed: "{{ ohmyzsh.stat.exists }}"

- name: "{{ role_name }} | Install oh-my-zsh"
  when: not ohmyzsh_is_installed
  block:
    - name: "{{ role_name }} | Download oh-my-zsh Install Script"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /{{ ansible_user_dir }}/oh-my-zsh.install.sh
        force: true
        mode: "0755"

    - name: "{{ role_name }} | Run the install script"
      ansible.builtin.script:
        cmd: /{{ ansible_user_dir }}/oh-my-zsh.install.sh --unattended
      changed_when: true # will be notified on change
      # changed_when: false # will not if no change (no running)

    - name: "{{ role_name }} | Cleanup oh-my-zsh install script"
      ansible.builtin.file:
        path: /{{ ansible_user_dir }}/oh-my-zsh.install.sh
        state: absent

- name: "{{ role_name }} | Set custom plugins"
  ansible.builtin.include_vars:
    dir: vars

- name: "{{ role_name }} | Install Custom Plugins"
  ansible.builtin.git:
    repo: "https://github.com/{{ item.repo }}"
    dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/plugins/{{ item.name }}"
    update: true
    depth: 1
  with_items: "{{ custom_plugins }}"

- name: "{{ role_name }} | Install powerlevel10k theme"
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
    update: true
    depth: 1

- name: "{{ role_name }} | Copy .zshenv"
  ansible.builtin.copy:
    src: ".zshenv"
    dest: "{{ ansible_user_dir }}/.zshenv"
    mode: "0644"
  changed_when: true # will be notified on change
  # changed_when: false # will not if no change (no running)

- name: "{{ role_name }} |  Cleanup default .zshrc"
  ansible.builtin.file:
    path: /{{ ansible_user_dir }}/.zshrc
    state: absent

#
# - name: "ZSH | Copy .profile"
#   ansible.builtin.copy:
#     src: ".profile"
#     dest: "{{ ansible_user_dir }}/.profile"
#     mode: "0644"

- name: "{{ role_name }} | Copy custom zsh config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/"
    src: "zsh"
    mode: "0644"
    directory_mode: "0755"
    force: true

- name: "{{ role_name }} | {{ ansible_distribution }} | Identify distribution config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_distribution }}"
  register: zsh_os_distribution_config

- name: "{{ role_name }} | {{ ansible_os_family }} | Identify os family config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_os_family }}"
  register: zsh_os_family_config
  when: not zsh_os_distribution_config.stat.exists

- name: "{{ role_name }} | Calculate os config src"
  ansible.builtin.set_fact:
    zsh_os_config: "{{ zsh_os_distribution_config if zsh_os_distribution_config.stat.exists else zsh_os_family_config }}"

- name: "{{ role_name }} | Copy custom zsh config for os: {{ zsh_os_config.stat.path | basename }}"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/zsh/"
    src: "{{ zsh_os_config.stat.path }}/"
    mode: "0644"
    force: true
  when:
    - zsh_os_config is defined
    - zsh_os_config.stat.exists
